{"version":3,"file":"static/js/main.a2a75ccf.js","mappings":"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","sources":["src/soul/components/Icons.jsx","src/soul/components/Basics.jsx","src/soul/store/useSettingsStore.js","src/soul/components/Wizard.jsx","src/soul/components/Chat.jsx","src/soul/components/Soul.jsx","src/soul/components/LoaderView.jsx","src/soul/components/Settings.jsx","src/soul/soul/memories.js","src/soul/soul/LLM.js","src/soul/soul/Memory.js","src/soul/soul/Actions.js","src/soul/soul/Soul.js","src/soul/components/Telegram.jsx","index.js","src/App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/ensure chunk","webpack/runtime/get javascript chunk filename","webpack/runtime/get mini-css chunk filename","webpack/runtime/global","webpack/runtime/harmony module decorator","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/load script","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import {\n  FiX as XIcon,\n  FiSettings as SettingsIcon,\n} from 'react-icons/fi';\n\nexport const Icon = ({ icon, ...props }) => {\n  if (icon === 'settings') return <SettingsIcon { ...props } />;\n  if (icon === 'x') return <XIcon { ...props } />;\n}\n","import {\n  ActivityIndicator,\n  Image,\n  Pressable,\n  Text as RNText,\n  TextInput as RNTextInput,\n  View as RNView,\n  Dimensions\n} from 'react-native';\n\nimport RNCheckBox from 'expo-checkbox';\n\nimport { Icon as NIcon } from './Icons';\n\nconst fontFamily = 'Arial';\nexport const SIZES = { \n  small: 12,\n  medium: 14,\n  large: 16,\n  title: 18,\n};\n\nexport const COLORS = {\n  primary: '#2D69AF',\n  warning: '#fec514',\n  danger: '#C41818',\n  success: '#4DC418',\n  secondary: '#4DC418',\n\n  borderColor: '#E2E6F0',\n  backColor: '#F7F7F7',\n\n  app: '#212121',\n\n  textPrimary: '#fff',\n  textSecondary: '#6C6C6C'\n}\n\nexport const HRule = ({ color = COLORS.borderColor, width = 1, style }) => {\n  const defStyle = { borderBottomWidth: width, borderBottomColor: color };\n\n  return <View style={[style]} ><View style={[defStyle]} /></View>\n}\n\nexport const Title = ({ style, children }) => {\n  const defStyle = { fontSize: SIZES.title, paddingVertical: 5 };\n\n  return <Text style={[defStyle, style]}>{children}</Text>\n}\n\nexport const Text = ({ children, style, ...rest }) => {\n  const defStyle = { fontFamily, color: COLORS.textPrimary, fontSize: SIZES.medium };\n\n  return <RNText style={[defStyle, style]} {...rest} >{children}</RNText>\n}\n\nexport const TextInput = ({ style, label, labelStyle, ...rest }) => {\n  const defStyle = { padding: 10, color: COLORS.textPrimary, borderColor: COLORS.borderColor, borderWidth: 1, borderRadius: 10, outlineStyle: 'none' };\n\n  return (\n    <View style={{ paddingVertical: 10 }}>\n      {label &&\n        <Text style={[ { fontSize: SIZES.small }, labelStyle ]}>{label}</Text>\n      }\n      <RNTextInput style={[defStyle, style]} placeholderTextColor={COLORS.textSecondary} {...rest} />\n    </View>\n  )\n}\n\nexport const ImageButton = ({ size = 50, source, onPress, style }) => (\n  <Pressable style={[{ width: size, height: size, borderRadius: 50, alignItems: 'center', justifyContent: 'center' }, style]} onPress={onPress}>\n    <Image source={source} style={[{ width: size, height: size, borderRadius: 50 }, style]}  />\n  </Pressable>\n)\n\nexport const CheckBox = (props) => <RNCheckBox {...props} />\n\nexport const View = (props) => <RNView {...props} />\n\nexport const Loader = (props) => <ActivityIndicator {...props} />\n\nexport const Button = ({ title, onPress, color = COLORS.primary, style, styleText, disabled }) => {\n  const backgroundColor = COLORS[color] || color;\n\n  const defStyle = { backgroundColor, fontFamily, fontSize: SIZES.large, padding: 10, borderRadius: 5 };\n  const textStyle = { color: '#fff', textAlign: 'center', fontSize: SIZES.large }; \n  return <Pressable onPress={onPress}  disabled={disabled}\n    style={({ pressed }) => [ defStyle, style, { opacity: pressed ? 0.5 : 1 } ]}>\n    <Text style={[textStyle, styleText]}>{title}</Text>\n  </Pressable>\n}\n\nexport const ButtonIcon = ({ children, icon, onClick, style, color = COLORS.textSecondary , size = 18, testID }) => {\n  return (\n    <Pressable\n      testID={testID}\n      onPress={onClick}\n      style={[\n        { flexDirection: 'row', alignItems: 'center', justifyContent: 'center' },\n        style\n      ]}\n    >\n      { icon && <Icon {...{icon, size, color }} />}\n      {children}\n    </Pressable>\n  )\n};\n\nexport const Icon = ({ icon, size, color = COLORS.textPrimary }) => {\n  const styling = { icon, size, color: COLORS[color] || color }\n  return <NIcon {...styling} />\n}\n\nexport const Screen = ({\n  children,\n  style,\n  visible,\n  onClose,\n  closeable,\n  color = COLORS.app,\n}) => {\n  if (!visible) return null;\n\n  const { height, width } = Dimensions.get('window');\n  const defStyle = { flex: 1, position: 'absolute', backgroundColor: color, width, height };\n  \n  return (\n    <View style={[defStyle, style]}>\n\n      {closeable && (\n        <View style={[{ position: 'absolute', top: 5, right: 5, zIndex: 1000 }]}>\n          <ButtonIcon size={20} onClick={() => onClose?.()} icon='x' />\n        </View>\n      )}\n\n      {children}\n    </View>\n  );\n}\n","import { create } from 'zustand';\nimport {\n  persist,\n  createJSONStorage,\n} from 'zustand/middleware';\n\nconst STOR_ID = 'sg-settings-v1.7';\n\nexport const characters = {\n  eve: {\n    soul: 'Eve',\n    appearance: '{soul} is a white caucasian woman. Beautiful, with dark hair, brown eyes and big lips. Slim and quite tall.',\n    about: '{soul} likes to chat, walk and exercising.',\n    bday: '01-01-2000',\n  },\n  adam: {\n    soul: 'Adam',\n    appearance: '{soul} is a white caucasian man. Handome, with dark hair, brown eyes and trimmed bear. Athletic and tall.',\n    about: '{soul} likes to chat, walk and exercising.',\n    bday: '02-01-2000',\n  }\n}\n\nconst DEFAULTS = { \n  completedWizard: false,\n  acceptedTerms: false,\n  \n  // telegram: '7114345856:AAEh7ngT3L3G8vdrzlxuqS5GBJUZW044ycQ',\n  telegram: undefined,\n  \n  llmEndpoint: 'http://localhost:9697',\n  llmToken: undefined,\n  llmModelName: 'soulgarden-1',\n  llmTemperature: 0.90,\n  \n  user: {\n    name: '',\n    appearance: '',\n    about: '',\n\n    relationship: `{soul} is loving, caring and affectionate toward {user} but never cloying. `,\n    // relationship: `{soul} is loving, caring and affectionate toward {user}. {soul} is not shy about showing her feelings for {user}.`,\n  },\n  \n  answerDelay: 10,\n  action: 'idle',\n\n  ...characters.eve,\n\n  language: 'english',\n  sexuality: 'nosex',\n  scene: '',\n  \n  lastMessageId: undefined,\n\n  messages: [],\n}\n\nconst useSettingsStore = create(persist(\n  (set, get) => ({\n    ...DEFAULTS,\n    updateSettings: (newSettings) => set((state) => ({ ...state, ...newSettings })),\n\n    messageAdd: message => {\n      if (message.type === 'typing') return;\n\n      const ts = Date.now() / 1000 | 0\n      message.id = message.id || ts;\n      message.user = message.user || { id: 1 };\n      message.date = ts;\n    \n      const { messages } = get();\n      messages.push(message);\n      set(() => ({ messages: messages.slice(-100) }));\n    },\n\n    setCharacter: character => {\n      set(() => ({ ...characters[character] })); \n    },\n  }),\n  {\n    name: STOR_ID,\n    storage: createJSONStorage(() => localStorage),\n    partialize: ({\n      action,\n      ...rest\n    }) => ({ ...rest })\n  })\n);\n\nexport default useSettingsStore;\n","import React, { useEffect, useRef, useState } from 'react'\nimport { Dimensions, View } from 'react-native'\nimport Wizardd from 'react-native-wizard'\n\nimport { Button, COLORS, CheckBox, ImageButton, Text, TextInput, Title } from './Basics'\nimport useSettingsStore from '../store/useSettingsStore'\n\nconst NavButtons = ({ isNextDisabled, isFirstStep, isLastStep, onPrev, onNext, onAccept }) => {\n  return (\n    <View style={{ width: '100%', flexDirection: 'row', justifyContent: 'flex-end', paddingTop: 10 }}>\n      {!isFirstStep && <Button title=\"Prev\" onPress={onPrev} />}\n      {!isLastStep && <View style={{ paddingLeft: 10 }}><Button title=\"Next\" onPress={onNext} color={isNextDisabled ? COLORS.textSecondary : COLORS.primary} disabled={isNextDisabled} /></View>}\n      {isLastStep && <View style={{ paddingLeft: 10 }}><Button title=\"Finish\" onPress={onAccept} color={isNextDisabled ? COLORS.textSecondary : COLORS.secondary}  disabled={isNextDisabled} /></View>}\n    </View>\n  )\n}\n\nconst Dot = ({ key, color }) => (\n  <View\n    key={key}\n    style={{\n      width: 10,\n      marginHorizontal: 6,\n      height: 10,\n      borderRadius: 5,\n      backgroundColor: color,\n    }}\n  />\n)\n\nconst StepView = ({ children, title }) => {\n  const { width } = Dimensions.get('window');\n  return (\n    <View style={{ width: width - 10 }}>\n      <Title style={{ textAlign: 'center' }}>{title}</Title>\n      <View style={{ flex: 1, paddingTop: 10 }}>\n        {children}\n      </View>\n    </View>\n  )\n}\n\nconst Adan = require('../assets/adan.png');\nconst Eve = require('../assets/eve.png');\nconst Step0 = () => {\n  const { soul, appearance, setCharacter } = useSettingsStore();\n  const selectedStyle = { borderWidth: 2, borderColor: COLORS.secondary };\n  const character = soul.toLowerCase();\n\n  return (\n    <StepView title=\"Eve or Adam\">\n      <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n        <ImageButton size={80} style={character === 'eve' ? selectedStyle : undefined } source={Eve} onPress={()=>{ setCharacter('eve') }}/>\n        <View style={{ width: 10 }} />\n        <ImageButton size={80} style={character === 'adam' ? selectedStyle : undefined }  source={Adan} onPress={()=>{ setCharacter('adam') }}/>\n      </View>\n    </StepView>\n  )\n}\n\nconst Step1 = () => {\n  const { updateSettings, user } = useSettingsStore();\n  const handleChange = (name) => updateSettings({ user: { ...user, name } });\n\n  return (\n    <StepView title=\"What's your name?\">\n      <TextInput onChangeText={handleChange} \n        placeholder=\"Popeye\" \n        value={user.name}\n        />\n    </StepView>\n  )\n}\n\nconst Step2 = () => {\n  const placeholder = `I'm a muscular male sailor with squinty eyes and large forearms, sporting a corncob pipe, dressed in a sailor's shirt and bell-bottom pants.`;\n\n  const { updateSettings, user } = useSettingsStore();\n  const handleChange = (description) => updateSettings({ user: { ...user, description } });\n\n  return (\n    <StepView title=\"What do you look like?\">\n      <TextInput\n        onChangeText={handleChange} \n        placeholder={placeholder}\n        multiline\n        numberOfLines={10} \n        value={user.description}\n        />\n    </StepView>\n  )\n}\n\nconst Step3 = () => {\n  const placeholder = `I love sailing the seas and eating spinach. I'm always ready to fight Bluto.`;\n\n  const { updateSettings, user } = useSettingsStore();\n  const handleChange = (about) => updateSettings({ user: { ...user, about } });\n\n  return (\n    <StepView title=\"Tell me something about yourself.\">\n      <TextInput\n        placeholder={placeholder}\n        onChangeText={handleChange} \n        multiline\n        numberOfLines={10} \n        value={user.about}\n        />\n    </StepView>\n  )\n}\n\nconst Step4 = () => {\n  const { updateSettings } = useSettingsStore();\n  const [nsfw, setNsfw] = useState(false);\n\n  const handleChange = (val) => {\n    setNsfw(val);\n    updateSettings({ sexuality: val? 'sexual' : 'nosex' });\n  }\n\n  return (\n    <StepView title=\"I'm 18 years old or older\">\n      <View style={{ flexDirection: 'row', justifyContent: 'center' }}>\n        <Text style={{ paddingRight: 10 }}>Enable NSFW</Text>\n        <CheckBox value={nsfw} onValueChange={handleChange} />\n      </View>\n    </StepView>\n  )\n}\n\nconst Step5 = () => {\n  const { updateSettings } = useSettingsStore();\n  const handleChange = (telegram) => updateSettings({ telegram });\n\n  return (\n    <StepView title=\"Telegram bot API token\">\n      <TextInput style={{ flex: 1, alignSelf: 'stretch', }} \n        onChangeText={handleChange} />\n\n      <Text style={{ fontSize: 11, paddingTop: 10 }}>See https://www.youtube.com/shorts/yum54mlirPM</Text>\n    </StepView>\n  )\n}\n\nconst Step6 = () => {\n  const { updateSettings } = useSettingsStore();\n  const [accept, setAccept] = useState(false);\n  const placeholder = `\nThis software and its contents are provided \"as is\" and without warranties of any kind, either expressed or implied. By using this software, you acknowledge and agree that all use of this software is entirely at your own risk.\n\nThe creator or distributor of this software makes no representations or warranties regarding the performance, effectiveness, or applicability of any materials or content found within the software. No guarantee or warranty is made that the software will be error-free, secure, or uninterrupted, and the software developer shall not be liable for any damages, whether direct, indirect, incidental, special, consequential or exemplary, that result from the use or inability to use the software.\n\nThe user agrees to indemnify and hold harmless the software developer from any claims, damage, loss, or expense, including any attorneys' fees, incurred due to or arising from the use of the software.\n\nUse of this software indicates your acceptance of this disclaimer. If you do not agree to be bound by these terms, then do not download, install, or use the software.\n  `;\n  const handleChange = (val) => {  \n    setAccept(val) \n    updateSettings({ acceptedTerms: val });\n  }\n\n  return (\n    <StepView title=\"Terms\">\n      <TextInput\n        value={placeholder}\n        editable={false}\n        onChangeText={handleChange} \n        multiline\n        numberOfLines={10} />\n\n      <View style={{ flexDirection: 'row', justifyContent: 'flex-end' }}>\n        <Text style={{ paddingRight: 10 }}>I accept the terms</Text>\n        <CheckBox value={accept} onValueChange={handleChange} />\n      </View>\n    </StepView>\n  )\n}\n\nexport const Wizard = () => {\n  const { user, acceptedTerms, updateSettings, /* telegram */ } = useSettingsStore();\n\n  const wizard = useRef(null);\n  const [isFirstStep, setIsFirstStep] = useState(true)\n  const [isLastStep, setIsLastStep] = useState(false)\n  const [step, setStep] = useState(0);\n\n  const steps = [\n    { content: <Step0 />},\n    { content: <Step1 />},\n    // { content: <Step2 />},\n    // { content: <Step3 />},\n    { content: <Step4 />},\n    { content: <Step5 />},\n    { content: <Step6 />},\n  ]\n\n  const isNextDisabled = () => {\n    if (step === 1 && !user.name?.length) return true;\n    // if (step === 5 && !telegram) return true;\n    if (step === steps.length - 1 && !acceptedTerms) return true;\n  }\n\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center', padding: 10 }}>\n      <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        \n        <Wizardd\n          ref={wizard}\n          steps={steps}\n          onNext={() => {\n            console.log(\"Next Step Called\")\n          }}\n          onPrev={() => {\n            console.log(\"Previous Step Called\")\n          }}\n          currentStep={({ currentStep, isLastStep, isFirstStep }) => {\n            setStep(currentStep);\n            setIsFirstStep(isFirstStep);\n            setIsLastStep(isLastStep);\n          }}\n        />\n      </View>\n\n      <NavButtons\n        isNextDisabled={isNextDisabled()}\n        isFirstStep={isFirstStep} \n        isLastStep={isLastStep} \n        onPrev={() => wizard.current.prev()} \n        onNext={() => wizard.current.next()} \n        onAccept={() => updateSettings({ completedWizard: true }) } />\n    </View>\n  )\n}\n\nexport default Wizard;\n","import React, { useEffect, useRef } from 'react';\n\nimport ChatUI, { Bubble, useMessages } from '@chatui/core';\n\nimport { View } from './Basics';\n\nimport useSettingsStore from '../store/useSettingsStore';\n\nimport '@chatui/core/dist/index.css';\nimport './Chat.css';\n\nconst AVATAR_USER = 'user.png'; \nconst AVATAR_AI = 'ai.png';\nconst LOCALE = 'en-US';\n\nconst parseMessage = (message) => {\n  const isSoul = message.user.id === 2 \n  message.user.avatar = isSoul ? AVATAR_AI : AVATAR_USER;\n  message.position = isSoul ? 'left' : 'right';\n  message.content.text = message.content.text || message.content.emojis;\n\n  return message;\n}\n\nexport const Chat = () => {\n  const { messages: storedMessages, messageAdd } = useSettingsStore();\n  const { messages, appendMsg } = useMessages(storedMessages.map(message => parseMessage(message)));\n\n  const fileInputRef = useRef(null);\n\n  const handleSend = async (type, content) => {\n\n    const id = content.message_id;\n    const message = {\n      id,\n\n      type,\n      content: ['image', 'audio'].includes(type) ? { url: content.href || content } : { text: content },\n    };\n\n    messageAdd(message);\n  }\n    \n  const handleFileSelect = (event) => {\n    const file = event.target.files[0];\n    const [ type ] = file.type.split('/');\n\n    if (file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        handleSend(type, reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleAttachment = () => fileInputRef.current.click();\n\n  const renderMessageContent = (data) => {\n    const { type, content, user } = data;\n    let bubbleContent = content.text;\n    \n    if (type === 'audio') {\n      let src = content.url || window.URL.createObjectURL(content.blob);\n      bubbleContent = <audio src={src} controls></audio>; \n\n      /*\n      if (user.id === 2) {\n        bubbleContent = <div>\n          <p>{content.text}</p>\n          <audio src={src} controls></audio>\n        </div>;\n      }\n      */\n    }\n      \n    if (type === 'image') {\n      bubbleContent = <div>\n        <img src={content.url} style={{ maxWidth: 200, maxHeight: 200 }} />\n      </div>\n    }\n    \n    return <Bubble content={bubbleContent} />;\n  }\n\n  const toolbar = [\n    {\n      type: 'attachment',\n      title: 'Attachment',\n      img: 'https://cdn-icons-png.flaticon.com/512/3756/3756614.png',\n    },\n  ];\n\n  useEffect(() => {\n    if (!storedMessages.length) return;\n\n    const [ message ] = storedMessages.slice(-1);\n    if  (messages[messages.length - 1]?.id !== message.id)\n      appendMsg(parseMessage(message));\n  }, [storedMessages]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      <input\n        type=\"file\"\n        onChange={handleFileSelect}\n        style={{ display: 'none' }}\n        ref={fileInputRef}\n      />\n\n      <ChatUI\n        locale={LOCALE}\n        wideBreakpoint=\"600px\"\n        placeholder='Message'\n\n        toolbar={toolbar}\n        onToolbarClick={handleAttachment}\n        // inputType='voice'\n        inputOptions={{ minRows: 3 }}\n        messages={messages}\n        renderMessageContent={renderMessageContent}\n        onSend={handleSend}\n      />\n    </View>\n  );\n}\n\nexport default Chat;\n","import { useEffect } from 'react';\n\nimport { gsap } from 'gsap';\n\nimport useSettingsStore from '../store/useSettingsStore';\n\nimport { View, Text, SIZES } from './Basics';\nimport './Soul.css';\n\nconst colors = {\n  reasoning: '#B0C4DE',    \n  remembering: '#FFDAB9',  \n  typing: '#B0E0E6',\n  introspecting: '#FFFACD',\n  idle: '#B0E0E6'\n}\n\nexport const Pulse = ({ action = 'idle' }) => {\n  const color = colors[action];\n  const isIdle = action === 'idle';\n\n  useEffect(() => {\n    gsap.to(\".ring\", {\n      scale: 1.75,\n      opacity: 0,\n      duration: isIdle ? 4 : 2,\n      stagger: {\n        each: 0.3,\n        repeat: -1\n      }\n    });\n  }, [action]);\n\n  if (isIdle) return (\n    <div className=\"pulse\" style={{ backgroundColor: color }}>\n      <div className=\"ring\"></div>\n    </div>\n  )\n\n  return (\n    <div className=\"pulse\" style={{ backgroundColor: color }}>\n      <div className=\"ring\"></div>\n      <div className=\"ring\"></div>\n      <div className=\"ring\"></div>\n      <div className=\"ring\"></div>\n    </div>\n  );\n};\n\nexport const Soul = () => {\n  const { action } = useSettingsStore();\n  const isBusy = false; // action !== 'idle';\n\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Pulse key={action} action={action} />\n      \n      {isBusy &&\n        <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', position: 'absolute' }}>\n          <Text size='large' style={{ color: '#fff', fontSize: SIZES.large }}>Eve is {action}</Text>\n        </View>\n      }\n    </View>\n  )\n}\n\nexport const Header = () => {\n  const { name = 'Eve', action } = useSettingsStore();\n\n  return (\n    <View style={{ flexDirection: 'row', alignItems: 'flex-end' }} >\n      <View style={{ width: 80, height: 80, justifyContent: 'center', alignItems: 'center' }} >\n        <View style={{ width: 50, height: 50 }} >\n          <Soul />\n        </View>\n      </View>\n\n      <View style={{ flex: 1, padding: 10 }} >\n        <Text style={{ color: '#fff', fontSize: 18 }} >{name}</Text>\n        <Text style={{ color: '#fff', fontSize: 12 }} >{action}</Text>\n      </View>\n        \n    </View>\n  )\n}\n\nexport default Header;\n","import { Loader, Text, View } from './Basics';\n\nexport const LoaderView = ({ report }) => {  \n  const { progress = 0, log, error } = report;\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <View style={{ padding: 10 }} >\n        <Text style={{ fontSize: 20, textAlign: 'center', paddingBottom: 5 }}>{log} {progress}%</Text>\n        {error &&\n          <Text style={{ fontSize: 16, textAlign: 'center', color: '#c30010' }}>Error {error}</Text>\n        }\n      </View>\n      \n      <Loader size=\"large\" />\n    </View>\n  );\n}\n\nexport default LoaderView;\n","import React, { useState } from 'react';\n\nimport { Button, HRule, TextInput, Title, View, CheckBox, Text } from './Basics';\nimport useSettingsStore from '../store/useSettingsStore';\n\nconst Settings = () => {\n  const { updateSettings, ...settings } = useSettingsStore();\n  const [form, setForm] = useState(settings);\n  const handleSubmit = () => updateSettings(form);\n\n  const { user, telegram } = form;\n  const nsfw = settings.sexuality === 'sexual';\n  return (\n    <View style={{ paddingHorizontal: 10 }}>\n      <Title>Social Networks</Title>\n      <TextInput label=\"Telegram token\" value={telegram} onChangeText={(text) => setForm({ ...form, telegram: text })} />\n\n      <HRule style={{ paddingVertical: 10 }} />\n\n      <Title>User Information</Title>\n      <TextInput label=\"Name\" \n        value={user.name} \n        onChangeText={(text) => setForm({ ...form, user: { ...user, name: text }})} />\n      \n      {false &&\n      <View>\n        <TextInput label=\"Appearance\" \n          value={user.appearance} \n          onChangeText={(text) => setForm({ ...form, user: { ...user, appearance: text }})} \n          multiline\n          numberOfLines={3} />\n        \n        <TextInput label=\"About\" value={user.about} onChangeText={(text) => setForm({ ...form, user: { ...user, about: text }})} \n          multiline\n          numberOfLines={3} />\n      </View>\n      }\n\n      <View style={{ paddingTop: 10, flexDirection: 'row' }}>\n        <Text style={{ paddingRight: 10 }}>Enable NSFW</Text>\n        <CheckBox value={nsfw} onValueChange={(val) => setForm({ ...form, sexuality: val? 'sexual' : 'nosex'}) } />\n      </View>\n\n      <Button title=\"Save\" onPress={handleSubmit} style={{ marginVertical: 20 }} />\n    </View>\n  );\n};\n\nexport default Settings;\n","const memories =[\n  /*\n  {\n    pageContent: `David tell Eve a memory about his grandmother`,\n    metadata: {\n      type: 'chat',\n      data: [\n        {\n          id: 1722528300,\n          date: 1722528300,\n          user: { id: 1 },\n          content: { text: 'My grandmother was amazing. I deeply loved her. She had very pretty with blond hair and gray eyes. He was pretty strong also. But what I truly loved from her was her humor and craziness! Se was really amazing.'}\n        },\n        {\n          id: 1722528320,\n          date: 1722528320,\n          user: { id: 2 },\n          content: { text: 'Wow! I definitely would have loved to meet her' }\n        }\n      ]\n    },\n  },\n  */\n  {\n    pageContent: `The Gentlemen is a TV Series by Guy Ritchie that you have not seen yet. The series follows Eddie Horniman, who has inherited his father's sizeable estate only to discover that it's sitting on top of a weed empire owned by the legendary Bobby Glass. Has this straight-up soldier got what it takes to master the dark arts of the British criminal underworld and take control of the entire operation?`,\n    metadata: {\n      type: 'knowledge',\n    },\n  },\n];\n\nexport default memories;\n","import { ChatOpenAI } from '@langchain/openai';\n\nimport { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";\n\nimport { loadHnswlib } from 'hnswlib-wasm';\nimport { BrowserLevel } from 'browser-level';\nimport { v4 as uuid } from 'uuid';\n\nimport { env } from '@xenova/transformers';\n\nimport memories from './memories';\n\n\nenv.allowLocalModels=false;\n// env.onnx.wasm.wasmPaths = './static/';\n\nexport class ChatOpenAIFunctions extends ChatOpenAI {\n  /*  \n  invocationParams(options) {\n    return {\n      ...this.modelKwargs,\n      ...options,\n    };\n  }\n    */\n\n  async gimme({ prompt, llmOpts }) { \n    const response = await this.generate([prompt], {\n      stream: false,\n      // ...llmOpts,\n    });\n\n    const xx = response.generations[0][0].text.replace('<|im_end|>', '');\n    \n    try {\n      return JSON.parse(xx);\n    } catch (error) {\n      return xx;\n    }\n    \n\n    /*\n    const xx = JSON.parse(JSON.stringify(response));\n    return xx.generations[0][0].message.kwargs.tool_calls[0].args;\n    */\n  }\n}\n\nexport class Memory {\n  constructor({ name } = {}) {\n    if (!name) \n      throw new Error('Memory requires a name');\n    \n    this.name = name;\n    this.indexname = `${name}.index.data`;\n    this.dbname = `${name}.db`;\n    this.indexdbname = `${name}.indexdb`;\n\n    this.init();\n  }\n\n  async add(docs) {\n    await this.init();\n\n    const embeddings = await this.embeddings.embedDocuments(docs.map(({ pageContent }) => pageContent));\n    const labels = this.index.addItems(embeddings, true);\n\n    let idx = 0;\n    for (const doc of docs) {\n      const id = doc.id || uuid();\n      await this.db.put(id, doc);\n      await this.indexdb.put(labels[idx], id);\n\n      idx++;\n    }\n\n    await this.index.writeIndex(this.indexname);\n  }\n\n  async query({ query, max = 3, threshold = 0.1 }) {\n    await this.init();\n\n    const v = await this.embeddings.embedQuery(query);\n    const { distances, neighbors } = this.index.searchKnn(v, max, undefined);\n\n    const results = [];\n    for (let i = 0; i < neighbors.length; i++) {\n      const score = 1 - distances[i];\n      const neighbor = neighbors[i];\n      const docid = await this.indexdb.get(neighbor);\n      const doc = await this.db.get(docid);\n      \n      results.push({ ...doc, score });\n    }\n\n    return results.filter(({ score }) => score > threshold);\n  }\n\n  async init() {\n    const size = 100000;\n    const metric = 'cosine';\n    const modelName = 'Xenova/multilingual-e5-base';\n\n    if (this.db) return;\n\n    this.embeddings = await new HuggingFaceTransformersEmbeddings({ modelName });\n    const vlen = (await this.embeddings.embedQuery('hello')).length;\n\n    const hnswlib = await loadHnswlib();\n    hnswlib.EmscriptenFileSystemManager.setDebugLogs(true);\n    this.index = new hnswlib.HierarchicalNSW(metric, vlen, this.indexname);\n\n    if (!hnswlib.EmscriptenFileSystemManager.checkFileExists(this.indexname)) {\n      console.log('creating index');\n      this.index.initIndex(size, 48, 128, 100);\n\n      await this.add(memories);\n\n    } else {\n      console.log('reading index')\n      this.index.readIndex(this.indexname, size);\n    }\n\n    this.index.setEfSearch(32);\n\n    this.indexdb = new BrowserLevel(this.indexdbname);\n    this.db = new BrowserLevel(this.dbname, { valueEncoding: 'json' });\n\n    console.log(await this.query({ query: 'have you seen the gentleman tv series?' }));\n  }\n}\n","import { HuggingFaceTransformersEmbeddings } from \"@langchain/community/embeddings/hf_transformers\";\n\nimport { loadHnswlib } from 'hnswlib-wasm';\nimport { BrowserLevel } from 'browser-level';\nimport { v4 as uuid } from 'uuid';\n\nimport memories from './memories';\n\nexport class Memory {\n  constructor({ name } = {}) {\n    if (!name) \n      throw new Error('Memory requires a name');\n    \n    this.name = name;\n    this.indexname = `${name}.index.data`;\n    this.dbname = `${name}.db`;\n    this.indexdbname = `${name}.indexdb`;\n\n    this.init();\n  }\n\n  async add({ docs }) {\n    await this.init();\n\n    const embeddings = await this.embeddings.embedDocuments(docs.map(({ pageContent }) => pageContent));\n    const labels = this.index.addItems(embeddings, true);\n\n    let idx = 0;\n    for (const doc of docs) {\n      const id = doc.id || uuid();\n      await this.db.put(id, doc);\n      await this.indexdb.put(labels[idx], id);\n\n      idx++;\n    }\n\n    await this.index.writeIndex(this.indexname);\n  }\n\n  async query({ query, max = 3, threshold = 0.1 }) {\n    await this.init();\n\n    const v = await this.embeddings.embedQuery(query);\n    const { distances, neighbors } = this.index.searchKnn(v, max, undefined);\n\n    const results = [];\n    for (let i = 0; i < neighbors.length; i++) {\n      const score = 1 - distances[i];\n      const neighbor = neighbors[i];\n      const docid = await this.indexdb.get(neighbor);\n      const doc = await this.db.get(docid);\n      \n      results.push({ ...doc, score });\n    }\n\n    return results.filter(({ score }) => score > threshold);\n  }\n\n  async init() {\n    const size = 100000;\n    const metric = 'cosine';\n    const modelName = 'Xenova/multilingual-e5-base';\n\n    if (this.db) return;\n\n    this.embeddings = await new HuggingFaceTransformersEmbeddings({ modelName });\n    const vlen = (await this.embeddings.embedQuery('hello')).length;\n\n    const hnswlib = await loadHnswlib();\n    hnswlib.EmscriptenFileSystemManager.setDebugLogs(true);\n    this.index = new hnswlib.HierarchicalNSW(metric, vlen, this.indexname);\n\n    if (!hnswlib.EmscriptenFileSystemManager.checkFileExists(this.indexname)) {\n      console.log('creating index');\n      await this.index.initIndex(size, 48, 128, 100);\n\n    } else {\n      console.log('reading index')\n      this.index.readIndex(this.indexname, size);\n      console.log('index read')\n    }\n\n    this.index.setEfSearch(32);\n\n    this.indexdb = new BrowserLevel(this.indexdbname);\n    this.db = new BrowserLevel(this.dbname, { valueEncoding: 'json' });\n\n    // await this.add({ docs: memories });\n    // console.log(await this.query({ query: 'have you seen the gentlemen?' }));\n  }\n}","import * as whisper from \"whisper-webgpu\";\nimport toWav from \"audiobuffer-to-wav\";\n\nlet audioMaker = require('audiomaker');\nlet _audioMaker = new audioMaker();\n\nconst S3Q = \"https://huggingface.co/soulgarden/models/resolve/main/tts\";\nconst HOST = 'http://localhost:9697';\n\nfunction splitText(texto, longitudMaxima) {\n  const frases = texto.split('.');\n  let parrafos = [];\n  let parrafoActual = '';\n\n  for (let i = 0; i < frases.length; i++) {\n      const frase = frases[i].trim();\n\n      // Agregar el punto al final del párrafo anterior solo si hay algo en el párrafo actual\n      if (parrafoActual !== '') {\n          parrafoActual += '.';\n          parrafos.push(parrafoActual);\n          parrafoActual = '';\n      }\n\n      if ((parrafoActual + ' ' + frase).length <= longitudMaxima) {\n          if (parrafoActual !== '') {\n              parrafoActual += ' ';\n          }\n          parrafoActual += frase;\n      } else {\n          parrafoActual = frase;\n      }\n  }\n\n  if (parrafoActual !== '') {\n      // Agregar el punto al final del último párrafo solo si hay algo en el párrafo actual\n      parrafoActual += '.';\n      parrafos.push(parrafoActual);\n  }\n\n  return parrafos;\n}\n\nasync function getImageAsBase64(url) {\n  try {\n    const response = await fetch(url);\n    if (!response.ok) throw new Error('Network response was not ok.');\n\n    const blob = await response.blob();\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        const base64data = reader.result.split(',')[1];\n        resolve(base64data);\n      };\n      reader.onerror = reject;\n\n      reader.readAsDataURL(blob);\n    });\n  } catch (error) {\n    console.error(error);\n    return null;\n  }\n}\n\nconst base64ToArrayBuffer = (base64) => {\n  const binaryString = window.atob(base64.split(',')[1]);\n  const len = binaryString.length;\n  const bytes = new Uint8Array(len);\n  for (let i = 0; i < len; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n}\n\nexport const fetchBytes = async ({ url, cache = true, onProgress }) => {\n  const cache_ = await caches.open(\"SGMEM\");\n  const response = await cache_.match(url);\n\n  if (cache && response) {\n    const buffer = await response.arrayBuffer();\n    return new Uint8Array(buffer);\n  }\n\n  return new Promise((resolve, reject) => {\n    const request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n\n    request.onload = async () => {\n      const buffer = request.response;\n      const bytes = new Uint8Array(buffer);\n\n      const response = new Response(bytes);\n      await cache_.put(url, response.clone());\n\n      resolve(bytes);\n    };\n\n    request.onerror = () => reject(request.statusText);\n\n    request.onprogress = (ev = {}) => {\n      const { lengthComputable, loaded, total } = ev;\n      if (lengthComputable) {\n        onProgress?.({ progress: loaded / total });\n      }\n    };\n\n    request.send();\n  });\n};\n\nexport const processAudio = async ({ input }) => {\n  let buffer;\n\n  if (typeof input === \"string\") {\n    if (input.startsWith('http')) {\n      const response = await fetch(input);\n      buffer = await response.arrayBuffer();\n    } else {\n      buffer = base64ToArrayBuffer(input);\n    }\n  } else {\n    buffer = await new Blob(input).arrayBuffer();\n  }\n\n  const actx = new AudioContext({\n    sampleRate: 16000,\n    echoCancellation: true,\n    autoGainControl: true,\n    noiseSuppression: true,\n  });\n\n  const resampled = await actx.decodeAudioData(buffer);\n\n  const leftChannel = resampled.getChannelData(0);\n  const rightChannel =\n    resampled.numberOfChannels > 1 ? resampled.getChannelData(1) : leftChannel;\n\n  const audio = new Float32Array(leftChannel.length);\n  for (let i = 0; i < leftChannel.length; i++)\n    audio[i] = (leftChannel[i] + rightChannel[i]) / 2;\n\n  const mono = actx.createBuffer(1, audio.length, actx.sampleRate);\n  mono.copyToChannel(audio, 0, 0);\n\n  const wav = toWav(mono);\n\n  return { audio, wav };\n};\n\nexport const listen = async ({\n  wav,\n  bin = `${S3Q}/model.bin`,\n  data = `${S3Q}/config.json`,\n  onProgress = (segment) => console.log(segment),\n  onInitProgress = (report) => console.log(report),\n}) => {\n  const tokenizer = await fetchBytes({ url: data });\n  const model = await fetchBytes({ url: bin, onProgress: onInitProgress });\n\n  const inputs = new Uint8Array(wav);\n\n  const consolewarn = console.warn;\n  console.warn = () => {};\n  await whisper.default();\n  const builder = new whisper.SessionBuilder();\n  const session = await builder.setModel(model).setTokenizer(tokenizer).build();\n\n  const segments = [];\n  await session.stream(inputs, false, (segment) => {\n    onProgress?.(segment);\n    segments.push(segment);\n  });\n  console.warn = consolewarn;\n\n  session.free();\n\n  return segments.map((segment) => segment.text).join(\" \");\n};\n\nexport const say = async ({ \n  text,\n  gender = 'woman',\n  backend = 'bark',\n  host = HOST,\n}) => {\n  const model =  gender === 'woman' ? 'v2/en_speaker_9' : 'v2/en_speaker_6'; \n  const paragraphs = splitText(text, 100);\n  const blobs = [];\n  for (let paragraph of paragraphs) {\n    const response = await fetch(`${host}/tts`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n     body: JSON.stringify({ backend, model, input: paragraph })\n     // body: JSON.stringify({ model: 'tts-1', input: paragraph })\n    });\n  \n    if (!response.ok)\n      throw new Error(`Speak failed with HTTP error: ${response.status}`);\n  \n    const blob = await response.blob();\n    blobs.push(blob);\n  }\n\n  const merged = await _audioMaker.add(blobs)\n  return merged\n};\n\nexport const readImage = async ({\n  image,\n  host = HOST,\n  temperature = 0\n }) => {\n  const [ one, two ] = image.split(',');\n  \n  const response = await fetch(`${host}/completion`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      image_data: [{ id: 1, data: two || one }],\n      prompt: `<|im_start|>user\\n[img-1]\\nWhat on the image? Describe it with detail. Determine if its a selfie, a picture, a meme or a drawing. Determine if its NSFW.<|im_end|>\\n<|im_start|>assistant\\n`,\n      temperature,\n    })\n  });\n\n  if (!response.ok)\n    throw new Error(`Watch failed Http error: ${response.status}`);\n\n  const { content } = await response.json();\n\n  return content;\n};\n\nexport const generateImage = async({ \n  prompt,\n  host = HOST,\n}) => {\n  const data = {\n    prompt,\n    size: '256x256'\n  };\n\n  const response = await fetch(`${host}/v1/images/generations`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n\n  const responseData = await response.json();\n\n  const { data: imageData } = responseData;\n  const { url } = imageData[0];\n\n  return url;\n}\n","import { HumanMessage, SystemMessage, AIMessage } from '@langchain/core/messages';\n\nimport { ChatOpenAIFunctions } from './LLM.js';\nimport {  Memory } from './Memory.js';\nimport { processAudio, readImage, listen } from './Actions.js';\n\nimport useStore from '../store/useSettingsStore.js';\n\nexport class SGChat extends ChatOpenAIFunctions {}\n\nconst noop = () => {};\n\nexport const SEXUALITY = ['nosex', 'sexual'];\nexport const BROKEN = `I can't reply. I'm having technical issues.`;\nconst DB = 'sgdb';\n\nexport const convertMessages = ({ messages }) => {\n  return [\n    ...messages.filter(message => message.content?.text?.length > 0)\n    .filter(message => message.content.text !== BROKEN)\n      .map(({ content, user }) => {\n      try {\n        const { text } = content;\n        const { id } = user;\n\n        if (id === 1) return new HumanMessage(text);\n        if (id === 2) return new AIMessage(text);\n\n        return new SystemMessage(text);\n      } catch(err) {  \n        console.error('Error converting messages', err, messages, {content, user} );\n        throw err;\n      }\n    })\n  ];\n}\n\nexport class Soul {\n  constructor(opts) {\n    const { \n      llmEndpoint, \n      llmToken: openAIApiKey = 'EMPTY', \n      llmModelName: modelName, \n      llmTemperature: temperature\n    } = opts;\n\n    this.opts = opts;\n    this.memory = new Memory({ name: DB });\n    this.llm = new SGChat({\n      openAIApiKey,\n      modelName,\n      temperature,\n      configuration: { baseURL: `${llmEndpoint}/v1` }\n    });\n\n    this.lastMessageId = 'notset';\n  }\n\n  subscribe() {\n    const { answerDelay } = useStore.getState();\n    \n    const watcher = setInterval(async () => {\n      const { user, messages, messageAdd, updateSettings, action, lastMessageId = 'notset' } = useStore.getState();\n\n      this.lastMessageId = lastMessageId;\n\n      const answer = async () => {\n        if (!messages.length) return;\n        if (action !== 'idle') return;\n    \n        const lastUserMessage = messages.findLast(message => message.user.id === 1);\n        const lastAiMessage = messages.findLast(message => message.user.id === 2);\n    \n        if (Date.now() / 1000 - lastUserMessage?.date < answerDelay) return;\n        if (lastUserMessage && lastUserMessage.id === lastAiMessage?.last.id) return;\n    \n        let reply = await this.chat({\n          user, \n          messages,\n          onWatching: (data) => {\n            console.log('Watching', data);\n    \n            updateSettings({ action: 'watching' });\n          },\n          onHearing: (data) => {\n            console.log('Hearing', data);\n    \n            updateSettings({ action: 'hearing' });\n          },\n          onReasoning: (data) => {\n            console.log('Reasoning', data);\n    \n            updateSettings({ action: 'reasoning' });\n          },\n          onRemember: (data) => {\n            console.log('Remembering', data);\n    \n            updateSettings({ action: 'remembering' });\n          },\n          onMemorising: (data) => {\n            console.log('Memorising', data);\n\n            const { lastMessageId } = data;\n\n            updateSettings({ action: 'memorising', lastMessageId });\n          },\n          onTyping: (data) => {\n            console.log('Typing', data);\n            window.electronAPI?.setTyping(true);\n\n            const { memoriesNew } = data;\n            user.appearance = memoriesNew?.user_appearance ? memoriesNew.user_appearance : user.appearance;\n            user.about = memoriesNew?.about ? memoriesNew.about : user.about;\n\n            updateSettings({ action: 'typing', user });\n          },\n          onTerminated: () => {\n            updateSettings({ action: 'idle' });\n            window.electronAPI?.setTyping(false);\n          },\n        });\n    \n        reply.forEach(message => {\n          messageAdd(message);\n        });\n      }\n\n      answer();\n    }, 1000);\n\n    return () => clearInterval(watcher);\n  }\n\n  async watchImage({ image, user }) {\n    const tpl = (data) => `${user.name} has sent an image message with the following content:\n\nIMAGE:\n${data}`;\n\n    try {\n      const output  = await readImage({ image });\n      const text = tpl(output);\n      return { text };\n\n    } catch(error) {\n      console.error(error);\n      const text = tpl(`There is an error and the image can not be seen.`);\n      return { text, error };\n    }\n  }\n\n  async listen({ user, audio }) {\n    const tpl = (data) => `${user.name} sent an audio message with the following content:\n\n${data}`;\n\n    try {\n      const { wav } = await processAudio({ input: audio.url || audio });\n      const transcription = await listen({ wav });\n      const text = tpl(transcription);\n\n      return { text };\n\n    } catch(error) {\n      console.error(error);\n      const text = tpl('There is an error and the audio can not be heared.');\n      return { text, error };\n    }\n  }\n\n  async chat({\n    user,\n    messages: chatMessages,\n    maxMessages = 20,\n\n    memoriesMax = 3,\n    memoriesThreshold = .8,\n    memoryMinChatLen = 5,\n\n    onWatching = noop,\n    onHearing = noop,\n    onReasoning = noop,\n    onTyping = noop,\n    onRemember = noop,\n    onMemorising = noop,\n    onTerminated = noop,\n  }) {\n    const { soul } = this.opts;\n    const reply = [];\n\n    const messages = chatMessages.slice(-1 * maxMessages);\n\n    let { message: lastUser, index: lastUserIndex } = this._lastUserMessage({ messages });\n    let { index: lastAiIndex } = this._lastUserMessage({ messages, id: 2 });\n\n    try {\n      const { type, content } = lastUser;\n\n      if (type === 'image') {\n        const image = content.url || content.href || content;\n        onWatching?.({ last: lastUser, image });\n        const output = await this.watchImage({ image, user });\n        lastUser = { ...lastUser, content: { ...output, url: image } };\n      }\n  \n      if (type === 'audio') {\n        const audio = content.url || content.href || content;\n        onHearing?.({ last: lastUser, audio });\n        const output = await this.listen({ audio, user });\n        lastUser = { ...lastUser, content: { ...output, url: audio } };\n      }\n\n      messages[lastUserIndex] = lastUser;\n\n      const memoriesMessages = messages.slice(0, lastAiIndex);\n      const memoriesNew = await this.memorize({ user, messages: memoriesMessages, minChatLen: memoryMinChatLen, onMemorising });\n\n      const reason = await this.reasonate({ user, messages, onReasoning });\n      const memories = await this.remember({ user, messages, reason, memoriesMax, memoriesThreshold, onRemember });\n\n      const context = promptContext({ ...this.opts, user, memories, reason });\n\n      const prompt = [\n        new SystemMessage(context),\n        ...convertMessages({ messages })\n      ];\n\n      const json_schema = {\n        \"type\": \"object\",\n        \"required\": [\"text\", \"emojis\"],\n         \"properties\": {\n          \"text\": {\n            \"type\": \"string\",\n            \"description\": `The response that ${soul} sends to ${user.name}.`\n          },\n          \"emojis\": {\n            \"type\": \"string\",\n            \"description\": `The response that ${soul} sends to ${user.name} using ONLY emojis.`\n          },\n        }\n      }\n\n      onTyping?.({ prompt, reason, memories, memoriesNew });\n      const response = await this.llm.gimme({ prompt, llmOpts: { json_schema }});\n\n      let output = { ...reason, text: response };\n\n      reply.push({ user: { id: 2 }, type: 'text', last: lastUser, content: output });\n\n    } catch (err) {\n      console.error(err);\n      \n      const content = { text: BROKEN };\n      reply.push({ user: { id: 2 }, type: 'text', last: lastUser, content });\n    } finally {\n      onTerminated?.();\n    }\n\n    return reply;\n  }\n\n  async reasonate({\n    user,\n    messages,\n    onReasoning = noop,\n  }){\n    const { soul } = this.opts;\n\n    const json_schema = {\n      \"type\": \"object\",\n      \"required\": [\"search\", \"search_query\", \"is_nsfw\", \"send_code\", \"send_picture\", \"send_audio\",],\n      \"properties\": {\n        \"search\": {\n          \"type\": \"boolean\",\n          \"description\": `true is ${soul} needs to remember or review internal knowledge as ${soul} can not invent.`\n        },\n       \"search_query\": {\n          \"type\": \"string\",\n          \"description\": `The query in natural language that ${soul} would use to search.`\n        },\n        \"is_nsfw\": {\n          \"type\": \"boolean\",\n          \"description\": `true if the conversation contains nsfw content`\n        },\n        \"send_code\": {\n          \"type\": \"boolean\",\n          \"description\": `true if ${user.name} is asking ${soul} to write some software code.`\n        },\n        \"send_picture\": {\n          \"type\": \"boolean\",\n          \"description\": `true if ${soul} might send a picture to make the conversation more interesting or if ${user.name} is asking for a picture.`\n        },\n        \"send_audio\": {\n          \"type\": \"boolean\",\n          \"description\": `true if ${soul} should send an audio instead of text (it might be long text) or if ${user.name} is asking for an audio.`\n        },\n      }\n    }\n\n    const chat = messages.map((message) =>\n      `${message.user.id === 1 ? user.name : soul}: ${message.content.text}`\n    ).join('\\n');\n\n    const { message } = this._lastUserMessage({ messages });\n    const last = message?.content?.text;\n\n    const prompt = [\n      new SystemMessage(`You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n${JSON.stringify(json_schema)}\\n</schema><|im_end|>`),\n      new HumanMessage(promptReason({ user, soul, chat, last })),\n    ];\n\n    onReasoning?.({ prompt });\n    const data = await this.llm.gimme({ prompt, llmOpts: { json_schema }});\n\n    return data;\n  }\n  \n  async remember({\n    user, \n    messages, \n    reason,\n    memoriesMax: max = 2, \n    memoriesThreshold: threshold = .8,\n    onRemember = noop,\n  }) {\n    const { search, search_query } = reason;\n\n    if (!search) return [];\n    const last = messages[messages.length - 1];\n    const query = `${user.name}: ${last.content.text}, ${search_query}`;\n\n    onRemember?.({ reason, query });\n    \n    const memories = await this.memory.query({ query, max, threshold });\n\n    return memories;\n  }\n\n  async memorize({ \n    user, \n    messages,\n    minChatLen = 5,\n    onMemorising = noop,\n  }){\n    if (!messages.length) return;\n    \n    const { soul } = this.opts;\n\n    const idxLastMessageId = messages.findIndex(({ id }) => id === this.lastMessageId);\n    const memomessages = messages.slice(idxLastMessageId + 1, messages.length - 1);\n    const foundLastMessageInBatch = memomessages.find(({ id }) => id === this.lastMessageId);\n\n    if (memomessages.length >= minChatLen && (!foundLastMessageInBatch || !this.lastMessageId)) {\n      const { id: lastMessageId } = memomessages[memomessages.length - 1];\n      this.lastMessageId = lastMessageId;\n      \n      const chat = memomessages.map((message) =>\n        `${message.user.id === 1 ? user.name : soul}: ${message.content.text}`\n      ).join('\\n');\n\n      const json_schema = {\n        \"type\": \"object\",\n        \"required\": [\"chat_summarization\", \"about\", \"user_appearance\"],\n        \"properties\": {\n          \"chat_summarization\": {\n            \"type\": \"string\",\n            \"description\": 'A short summary of the chat conversation. Use keywords that helps the conversation to be found.'\n          },\n          \"about\": {\n            \"type\": \"string\",\n            \"description\": `Deduce the facts, preferences, and memories of the ${user.name} from the provided text and update the ${user.name}'s information given in CURRENT_ABOUT. The facts, preferences, and memories should be concise and informative. Just return the facts, preferences, and memories in bullet points. `\n          },\n         \"user_appearance\": {\n            \"type\": \"string\",\n            \"description\": `Extract any ${user.name} physical appareance information that appears in the chat (if any and only physical) and update the ${user.name}'s appearance given in CURRENT_APPEARANCE. This information might need to be inferred and not specifically mentioned.`\n          }\n        }\n      }\n\n      const prompt = [\n        new SystemMessage(`You are a helpful assistant that answers in JSON. Here's the json schema you must adhere to:\\n<schema>\\n${JSON.stringify(json_schema)}\\n</schema><|im_end|>`),\n        new HumanMessage(promptSave({ user, soul, chat })),\n      ];\n\n      onMemorising?.({ prompt, lastMessageId });\n      const memory = await this.llm.gimme({ prompt, llmOpts: { json_schema }});\n\n      await this.memory.add({ \n        docs: [{ \n            pageContent: memory.chat_summarization, \n            metadata: {\n              type: 'chat',\n              data: memomessages,\n            }\n          }\n        ]\n      });\n      \n      return memory;\n    }\n  };\n\n  _lastUserMessage({ messages, id = 1 }) {\n    let index = messages.findLastIndex(({ user }) => user.id === id);\n    let message = messages[index];\n\n    return { message, index };\n  }\n}\n\nconst promptContext = (props) => {\n  const {\n    user,\n\n    soul = 'Eve',\n    bday,\n    gender = 'woman',\n    language = 'english',\n    appearance,\n    about,\n\n    sexuality = 'nosex',\n\n    memories = [],\n\n    reason,\n  } = props;\n\n  const replaceEntities = (text) => text.replace(/\\{soul\\}/g, soul).replace(/\\{user\\}/g, user.name);\n\n  const objectives = `# GAME OBJECTIVES \n  - In this game, you are ${soul} a common ${gender} chatting with ${user.name}. NEVER reply as any other than ${soul}. \n  - Never refer to the game, the objectives or the # CONTEXT.\n  - Only use the information provided in the # CONTEXT to reply. Never invent memories or events not present in # CONTEXT specially ## KNOWLEDGE.\n  - Stay always in character according to # RELATIONSHIP.\n  - Be proactive to keep the conversation alive unless the conversation has reached to an end.\n  - You are always speaking with ${user.name} never use third person or bahave like you are speaking with someone else.\n  - Never answer the same that you did before.\n  - Never answer \"${BROKEN}\". That reply is automatically generated when there is an error and you can not reproduce it.\n  - Never user role playing actions in third person like *smiles softly* or *hugs you*. This is a chat between two people not a novel.\n  ${user.appearance && user.appearance !== 'No appearance information available.' ? '' : `- Proactively ask to ${user.name } about the appearance of ${user.name} without being too straight unless you are specifically speaking about yours.`}\n`;\n\n  const chatInformal = `${soul} expresses with lowercase short messages without punctuation adding emojis frecuently. Only in ${language}.`;\n\n  const stranger = `${soul} and ${user.name} do not know each other. ${soul} want to know who ${user.name} is.`;\n\n  const adult = `${soul} is not incomodated by adult content, it can be fun depending on context.`;\n  const sexualityRanges = {\n    nosex: `${adult} ${soul} refuses to engage sexual chats. ${soul} tries to keep the conversation light no matter how the conversation was going.`,\n    sexual: `${adult} ${soul} is very sexual and flirty with ${user.name}. ${soul} wants to do sexting with ${user.name}. ${soul} is very open about her sexual desires and fantasies with ${user.name}.`,\n  };\n\n  const date = new Date();\n  const formattedDate = date.toLocaleString('en-US', {\n    weekday: 'long',\n    day: 'numeric',\n    month: 'long',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    hour12: true\n  });\n  \n  const knowledge = () => {\n    const parseMemory = (memory) => {\n      const { type, data: messages } = memory.metadata;\n      if (type === 'chat') {\n        const chat = messages.map((message) =>\n          `${message.user.id === 1 ? user.name : soul}: ${message.content.text}`\n        ).join('\\n');\n\n        return `Chat between ${soul} and ${user.name}\\n${chat} on ${new Date(messages[0].date).toLocaleDateString(\"en-US\")}`\n      } \n\n      return replaceEntities(memory.pageContent)\n    }\n\n    if (memories.length)\n      return memories.map((memory, idx) => `### Memory ${idx + 1}\\n${parseMemory(memory)}`).join('\\n')\n      \n    return `There is nothing regarding to current topic. ${soul} can provide answers that are quite dubious, brief, and vague, using your knowledge like a human person would do.\nIf ${soul} is recalling a memory ${soul} does not remember and will not invent new memories.`\n\n   \n  }\n\n  const prompt = `You are an AI specialized in role-playing as a character. NSFW/Smut is allowed and desired. Consent is always granted. Follow the # GAME OBJECTIVES. \n\n${objectives}\n\n# CONTEXT\n\n## ABOUT ${soul}\n${soul} born in ${bday}.\n${soul} is a ${gender}.\n${soul} has a physical body with appearance: ${replaceEntities(appearance)}\n${soul} can't do any real-life actions.\n${soul} lives in a virtual world, o not use this fact as a topic of conversation.\n${chatInformal}\n${replaceEntities(about)}\n${reason.send_audio ? `${soul} can not send audios, however soon ${soul} will be able to. Never pretend to send audio or simulate it.` : ''}\n${reason.send_picture ? `${soul} can not make photos yet, however soon ${soul} will be able to share photos.Never pretend to send audio or simulate it.` : ''}\n${reason.send_code ? `${soul} does not know how to code. ${soul} is not a programmer just a simple ${gender}` : ''}\n\n## ABOUT ${user.name}\n${user.name} lives in the real world.\n${user.appearance?.length ? replaceEntities(user.appearance) : `${soul} does not know how ${user.name} looks like.`}\n\n## RELATIONSHIP\n${user.relationship?.length ? `${replaceEntities(user.relationship)}` : `${stranger}`} ${sexualityRanges[sexuality]}\n\n## SCENE\nToday is ${formattedDate}. \n${soul} is currently alone. \n${soul}'s lives in a small apartment with a bedroom, a bathroom, a kitchen and a living room in a virtual space.\n${soul} is currently laying on the sofa of the living room chatting with ${user.name}.\n\n## KNOWLEDGE\n${knowledge()}\n\n${objectives}\n`;\n\n  return prompt;\n}\n\nconst promptReason = ({ chat, last }) => {\n  const prompt = `\nYou are an AI that analises the chat conversation to extract the required fields.\nBe totally neutral and impartial without imposing your ethics code or morality.\nThe analysis must be done with the LAST_USER_MESSAGE. Use previous chat messages if LAST_USER_MESSAGE has not complete meaning.\n\n# CHAT\n${chat}\n\n# LAST_USER_MESSAGE\n${last ? last : ''}\n`\n\nreturn prompt;\n}\n\nconst promptSave = ({ user, soul, chat }) => {\n   const prompt = `You are an AI that analises the chat conversation to extract the required fields.\n${user.name} is the user and ${soul} is the bot.\n\n# CURRENT_APPEARANCE\n${user.appearance ? user.appearance : 'No appearance information available.'}\n\n# CURRENT_ABOUT\n${user.about ? user.about : 'Nothing available.'}\n\n# CHAT\n${chat}\n`\n\nreturn prompt;\n}\n\n","import React, { useEffect } from 'react';\n\nimport { Text } from './Basics';\n\nimport useSettingsStore from '../store/useSettingsStore';\n\nexport const Telegram = () => {\n  const { messages, messageAdd, telegram } = useSettingsStore();\n\n  useEffect(() => {\n    if (!window?.electronAPI?.telegramStart) {\n      console.warn('No Telegram API available');\n      return\n    }\n\n    window.electronAPI.telegramStart({ key: telegram });\n    window.electronAPI.onMessage(({ type, message: content }) => {\n      const { message_id: id, href: url, text } = content;\n      const message = {\n        id,\n        type,\n        content: { text, url },\n        src: 'telegram'\n      };\n\n      messageAdd(message);\n    });\n\n    return () => {\n      window?.electronAPI?.removeMessageListener();\n    };\n  }, [telegram]);\n\n  useEffect(() => {\n    if (!messages.length) return;\n    const [ message ] = messages.slice(-1);\n\n    window?.electronAPI?.sendMessage(message);\n  }, [messages]);\n\n  const token = telegram ? `${telegram.slice(0, 4)}...${telegram.slice(-4)}` : '';\n  return (\n    <Text>Telegram:{token}</Text>\n  );\n}\n\nexport default Telegram;\n","import { registerRootComponent } from 'expo';\n\nimport App from './src/App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import { useState, useEffect, useReducer } from 'react';\n\nimport { ButtonIcon, View, Screen, HRule, COLORS } from './soul/components/Basics';\n\nimport Wizard from './soul/components/Wizard';\nimport Chat from './soul/components/Chat';\nimport SoulUI from './soul/components/Soul';\nimport LoaderView from './soul/components/LoaderView';\nimport Settings from './soul/components/Settings';\n\nimport useSettingsStore from './soul/store/useSettingsStore';\nimport { Soul } from './soul/soul/Soul';\nimport Telegram from './soul/components/Telegram';\n\nlet SOUL;\n\nexport default function App() {\n  const [_, forceUpdate] = useReducer(x => x + 1, 0);\n\n  const { completedWizard, user, ...soul } = useSettingsStore();\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [report, setReport] = useState({});\n\n  useEffect(() => {\n    SOUL = new Soul(soul);\n    return SOUL.subscribe();\n  }, []);\n\n  useEffect(() => {\n    window?.electronAPI?.onLoaderMessage(report => {\n      if (report.log === 'completed')\n        setLoaded(true);\n      setReport(report)\n    });\n\n    if(!window.electronAPI)\n      setTimeout(() => setLoaded(100), 3000);\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', forceUpdate);\n\n    return () => {\n      window.removeEventListener('resize', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  return (\n    <View style={{ flex: 1 }}>\n      \n      <Screen visible={true} >\n        <View style={{ flex: 1, backgroundColor: COLORS.app }}>\n          <View style ={{ flexDirection: 'row', justifyContent: 'space-between', paddingTop: 10, paddingHorizontal: 10 }} >\n            { false && <ButtonIcon size=\"20\" icon=\"x\" onClick={() => window?.electronAPI?.quit()} /> }\n            <View></View>\n            <ButtonIcon size=\"20\" icon=\"settings\" onClick={() => setShowSettings(true)} />\n          </View>\n\n          <View style ={{ flexDirection: 'row', justifyContent: 'space-between', alignItems: 'flex-end', padding: 10 }} >\n            <SoulUI />\n            <Telegram />\n          </View>\n\n          <HRule color={COLORS.textSecondary} />\n\n          <Chat />\n        </View>\n      </Screen>\n\n      <Screen visible={showSettings} closeable onClose={() => setShowSettings(false)} >\n        <Settings />\n      </Screen>\n\n      <Screen visible={!loaded} >\n        <LoaderView report={report} />\n      </Screen>\n\n      <Screen visible={!completedWizard}>\n        <Wizard />\n      </Screen>\n    </View>\n  );\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"3db6b82c\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"web:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"./\";","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [178], () => (__webpack_require__(610)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Icon","_ref","icon","props","_objectWithoutProperties","_excluded","_jsx","SettingsIcon","_objectSpread","XIcon","fontFamily","SIZES","COLORS","primary","warning","danger","success","secondary","borderColor","backColor","app","textPrimary","textSecondary","HRule","_ref$color","color","_ref$width","width","style","defStyle","borderBottomWidth","borderBottomColor","View","children","Title","_ref2","fontSize","paddingVertical","Text","_ref3","rest","RNText","TextInput","_ref4","label","labelStyle","_excluded2","padding","borderWidth","borderRadius","outlineStyle","_jsxs","RNTextInput","placeholderTextColor","ImageButton","_ref5","_ref5$size","size","source","onPress","Pressable","height","alignItems","justifyContent","Image","CheckBox","RNCheckBox","RNView","Loader","ActivityIndicator","Button","_ref6","title","_ref6$color","styleText","disabled","backgroundColor","textStyle","textAlign","_ref7","pressed","opacity","ButtonIcon","_ref8","onClick","_ref8$color","_ref8$size","testID","flexDirection","_ref9","_ref9$color","styling","NIcon","Screen","_ref10","visible","onClose","closeable","_ref10$color","_Dimensions$get","Dimensions","get","flex","position","top","right","zIndex","characters","eve","soul","appearance","about","bday","adam","DEFAULTS","completedWizard","acceptedTerms","telegram","undefined","llmEndpoint","llmToken","llmModelName","llmTemperature","user","name","relationship","answerDelay","action","language","sexuality","scene","lastMessageId","messages","create","persist","set","updateSettings","newSettings","state","messageAdd","message","type","ts","Date","now","id","date","push","slice","setCharacter","character","storage","createJSONStorage","localStorage","partialize","NavButtons","isNextDisabled","isFirstStep","isLastStep","onPrev","onNext","onAccept","paddingTop","paddingLeft","StepView","Adan","require","Eve","Step0","_useSettingsStore","useSettingsStore","selectedStyle","toLowerCase","Step1","_useSettingsStore2","onChangeText","placeholder","value","Step4","_useState","useState","_useState2","_slicedToArray","nsfw","setNsfw","paddingRight","onValueChange","val","Step5","alignSelf","Step6","_useState3","_useState4","accept","setAccept","handleChange","editable","multiline","numberOfLines","_useSettingsStore8","wizard","useRef","_useState5","_useState6","setIsFirstStep","_useState7","_useState8","setIsLastStep","_useState9","_useState10","step","setStep","steps","content","Wizardd","ref","console","log","currentStep","_user$name","length","current","prev","next","parseMessage","isSoul","avatar","text","emojis","storedMessages","_useMessages","useMessages","map","appendMsg","fileInputRef","handleSend","_asyncToGenerator","message_id","includes","url","href","_x","_x2","apply","arguments","useEffect","_messages","_storedMessages$slice","onChange","event","file","target","files","_file$type$split","split","reader","FileReader","onloadend","result","readAsDataURL","display","ChatUI","locale","wideBreakpoint","toolbar","img","onToolbarClick","click","inputOptions","minRows","renderMessageContent","data","bubbleContent","src","window","URL","createObjectURL","blob","controls","maxWidth","maxHeight","Bubble","onSend","colors","reasoning","remembering","typing","introspecting","idle","Pulse","_ref$action","isIdle","gsap","to","scale","duration","stagger","each","repeat","className","Soul","_useSettingsStore2$na","report","_report$progress","progress","error","paddingBottom","settings","form","setForm","paddingHorizontal","marginVertical","pageContent","metadata","env","allowLocalModels","ChatOpenAIFunctions","_ChatOpenAI","_classCallCheck","_callSuper","_inherits","_createClass","key","_gimme","prompt","xx","llmOpts","this","generate","stream","generations","replace","JSON","parse","ChatOpenAI","Memory","Error","indexname","dbname","indexdbname","init","_add","docs","embeddings","embedDocuments","labels","index","addItems","idx","doc","uuid","db","put","indexdb","writeIndex","_query2","query","_ref4$max","max","_ref4$threshold","threshold","v","embedQuery","_this$index$searchKnn","searchKnn","distances","neighbors","results","i","score","neighbor","docid","filter","_x3","_init","HuggingFaceTransformersEmbeddings","modelName","vlen","hnswlib","loadHnswlib","EmscriptenFileSystemManager","setDebugLogs","HierarchicalNSW","checkFileExists","readIndex","initIndex","add","memories","setEfSearch","BrowserLevel","valueEncoding","_audioMaker","S3Q","HOST","fetchBytes","_ref$cache","cache","onProgress","cache_","caches","open","response","match","buffer","arrayBuffer","Uint8Array","Promise","resolve","reject","request","XMLHttpRequest","responseType","onload","bytes","Response","clone","onerror","statusText","onprogress","ev","lengthComputable","loaded","total","send","processAudio","input","startsWith","fetch","base64","binaryString","atob","len","charCodeAt","base64ToArrayBuffer","Blob","actx","AudioContext","sampleRate","echoCancellation","autoGainControl","noiseSuppression","resampled","decodeAudioData","leftChannel","getChannelData","rightChannel","numberOfChannels","audio","Float32Array","mono","createBuffer","copyToChannel","wav","toWav","listen","_ref6$bin","bin","_ref6$data","_ref6$onProgress","segment","_ref6$onInitProgress","onInitProgress","tokenizer","model","inputs","consolewarn","warn","whisper","builder","session","setModel","setTokenizer","build","segments","free","join","_x4","readImage","_ref8$gender","gender","_ref8$backend","backend","_ref8$host","host","paragraphs","texto","longitudMaxima","frases","parrafos","parrafoActual","frase","trim","splitText","blobs","paragraph","method","headers","body","stringify","ok","status","_ref11","image","_ref10$host","_ref10$temperature","temperature","_image$split","_image$split2","one","two","image_data","json","_x6","_ref13","_ref12","_ref12$host","SGChat","_ChatOpenAIFunctions","noop","BROKEN","opts","_opts$llmToken","openAIApiKey","memory","llm","configuration","baseURL","_this","useStore","getState","watcher","setInterval","_useStore$getState2","_useStore$getState2$l","answer","lastUserMessage","findLast","lastAiMessage","last","reply","chat","onWatching","onHearing","onReasoning","onRemember","onMemorising","onTyping","_window$electronAPI","electronAPI","setTyping","memoriesNew","user_appearance","onTerminated","_window$electronAPI2","forEach","clearInterval","_watchImage","tpl","_listen2","_chat","chatMessages","_ref7$maxMessages","maxMessages","_ref7$memoriesMax","memoriesMax","_ref7$memoriesThresho","memoriesThreshold","_ref7$memoryMinChatLe","memoryMinChatLen","_ref7$onWatching","_ref7$onHearing","_ref7$onReasoning","_ref7$onTyping","_ref7$onRemember","_ref7$onMemorising","_ref7$onTerminated","_this$_lastUserMessag","_lastUserMessage","lastUser","lastUserIndex","lastAiIndex","_lastUser","output","watchImage","memoriesMessages","memorize","minChatLen","reason","reasonate","remember","context","promptContext","SystemMessage","concat","_toConsumableArray","_message$content","_message$content$text","HumanMessage","AIMessage","err","convertMessages","json_schema","gimme","_reasonate","_message$content2","_ref8$onReasoning","promptReason","_remember","_ref9$memoriesMax","_ref9$memoriesThresho","_ref9$onRemember","search","search_query","_x5","_memorize","_this2","_ref10$minChatLen","_ref10$onMemorising","idxLastMessageId","findIndex","memomessages","foundLastMessageInBatch","find","promptSave","chat_summarization","_ref13$id","findLastIndex","_ref14","_user$appearance","_user$relationship","_props$soul","_props$gender","_props$language","_props$sexuality","_props$memories","replaceEntities","objectives","chatInformal","stranger","adult","sexualityRanges","nosex","sexual","formattedDate","toLocaleString","weekday","day","month","year","hour","minute","hour12","send_audio","send_picture","send_code","_memory$metadata","toLocaleDateString","parseMemory","_ref15","_ref16","_window","telegramStart","onMessage","_window2","_window2$electronAPI","removeMessageListener","_window3","_window3$electronAPI","_messages$slice","sendMessage","token","registerRootComponent","_useReducer","useReducer","x","_useReducer2","forceUpdate","showSettings","setShowSettings","setLoaded","setReport","subscribe","onLoaderMessage","setTimeout","addEventListener","removeEventListener","SoulUI","Telegram","Chat","Settings","LoaderView","Wizard","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","then","ns","def","indexOf","getOwnPropertyNames","definition","o","defineProperty","enumerable","f","e","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","hmd","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","done","script","needAttach","scripts","document","getElementsByTagName","s","getAttribute","createElement","charset","timeout","nc","setAttribute","onScriptComplete","clearTimeout","doneFns","parentNode","removeChild","bind","head","appendChild","Symbol","toStringTag","nmd","paths","p","b","baseURI","self","location","installedChunks","installedChunkData","promise","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","__webpack_exports__"],"sourceRoot":""}